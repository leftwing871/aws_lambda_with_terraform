# This is a basic workflow to help you get started with Actions

name: lambda-1 CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
    paths:
      - 'lambda-1/**'
      - '.github/workflows/lambda-1.yml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "workflow"
  workflow:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ap-northeast-2
      #AWS_LAMBDA_FUNCTION_NAME: arn:aws:lambda:ap-northeast-2:000000000000:function:lambda-1
      AWS_LAMBDA_FUNCTION_NAME: lambda-1

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2

      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.SHARED_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.SHARED_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # Install Python Packages
      - name: Install Python Packages
        working-directory: ./${{ env.AWS_LAMBDA_FUNCTION_NAME }}
        run: |
          mkdir packages
          pip install -r requirements.txt -t packages/
          ls -a packages


      # Make a Zip File
      - name: Make a Zip File
        working-directory: ./${{ env.AWS_LAMBDA_FUNCTION_NAME }}
        run: zip -rq ${{ env.AWS_LAMBDA_FUNCTION_NAME }}.zip .

      # Deploy to AWS Lambda
      - name: Deploy to AWS Lambda
        working-directory: ./${{ env.AWS_LAMBDA_FUNCTION_NAME }}
        run: |
          aws lambda update-function-code \
          --function-name ${{ env.AWS_LAMBDA_FUNCTION_NAME }} \
          --zip-file fileb://${{ env.AWS_LAMBDA_FUNCTION_NAME }}.zip
      
      # Create a new function version
      - name: Create a new function version
        working-directory: ./${{ env.AWS_LAMBDA_FUNCTION_NAME }}
        run: |
          sudo apt-get update
          sudo apt install jq -y

          Version=$(aws lambda publish-version \
          --function-name ${{ env.AWS_LAMBDA_FUNCTION_NAME }} | jq  '.Version')

          echo $Version


      # Update alias
      - name: Update alias
        working-directory: ./${{ env.AWS_LAMBDA_FUNCTION_NAME }}
        run: |
          aws lambda update-alias \
          --function-name ${{ env.AWS_LAMBDA_FUNCTION_NAME }} \
          --function-version $((Version)) \
          --name prod


      # Remove a Zip File
      - name: Remove a Zip File
        working-directory: ./${{ env.AWS_LAMBDA_FUNCTION_NAME }}
        run: rm ${{ env.AWS_LAMBDA_FUNCTION_NAME }}.zip